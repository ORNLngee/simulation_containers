# -------------------------------------------------------------------------------------------
#
# Ubuntu/nvidia HPC xSDK baseOS docker container for building ELM gpu-capable version
# AMD64
#
# -------------------------------------------------------------------------------------------
#

FROM docker.io/yuanfornl/elm_baseos_nvhpc:23.5
# baseos for ELM initial extension on Nvidia HPC xSDK version 23.5
# NOT YET included and will have in this extension: HDF5, NETCDF4
#    (NOTE: having issue with building HDF5 by docker build. So this is a work-around temporarily)

LABEL maintainer.name="F.-M. Yuan" \
      maintainer.email="yuanf@ornl.gov" \
      author.name="Fengming Yuan" \
      author.email="yuanf@ornl.gov" \
      description="Nvidia HPC xSDK based image loaded with necessary dependencies for building ELM images"

## netCDF4 C & netCDF-Fortran

ARG NETCDF_C_VERSION=4.9.2
ARG NETCDF_FORTRAN_VERSION=4.6.1
ARG NETCDF_CXX_VERSION=4.3.1

RUN cd / \
    && mkdir -p /usr/local/netcdf \
    && export NCDIR=/usr/local/netcdf \
    && export HDF5_DIR=/usr/local/hdf5 \
    && wget https://downloads.unidata.ucar.edu/netcdf-c/$NETCDF_C_VERSION/netcdf-c-$NETCDF_C_VERSION.tar.gz \
    && tar -zxvf netcdf-c-$NETCDF_C_VERSION.tar.gz \
    && cd netcdf-c-$NETCDF_C_VERSION \
    && CC=`which mpicc` CFLAGS="-fPIC -I${HDF5_DIR}/include" LDFLAGS=-L${HDF5_DIR}/lib ./configure --host=$(./config.guess) --enable-static --enable-shared --enable-netcdf4 --enable-parallel-tests --prefix=${NCDIR} \
    && make -j2 all && make check -i && make install \
    && export PATH=$NCDIR/bin:$PATH \
    && export LD_LIBRARY_PATH=$NCDIR/lib:$LD_LIBRARY_PATH \
    && cd / \
    && rm -r netcdf-c-$NETCDF_C_VERSION \
    && rm netcdf-c-$NETCDF_C_VERSION.tar.gz

RUN cd / \
    && export NCDIR=/usr/local/netcdf \
    && export HDF5_DIR=/usr/local/hdf5 \
    && export NFDIR=/usr/local/netcdf \
    && wget https://downloads.unidata.ucar.edu/netcdf-fortran/$NETCDF_FORTRAN_VERSION/netcdf-fortran-$NETCDF_FORTRAN_VERSION.tar.gz \
    && tar -zxvf netcdf-fortran-$NETCDF_FORTRAN_VERSION.tar.gz \
    && cd netcdf-fortran-$NETCDF_FORTRAN_VERSION \
    && CC=mpicc FC=mpif90 F77=mpif90 CPP=cpp FFLAGS=-fPIC FCFLAGS=-fPIC CPPFLAGS="-I$NCDIR/include -I$HDF5_DIR/include" LDFLAGS="-L$NCDIR/lib -L$HDF5_DIR/lib" ./configure --host=$(./config.guess) --enable-static --enable-shared --enable-parallel-tests --prefix=$NFDIR \
    && make -j2 all && make install \
    && cd / \
    && rm -r netcdf-fortran-$NETCDF_FORTRAN_VERSION \
    && rm netcdf-fortran-$NETCDF_FORTRAN_VERSION.tar.gz

## note: anything using 'export' in 'RUN' command will be lost when done, so the following is a must
ARG NETCDF_DIR=/usr/local/netcdf
ENV PATH=$NETCDF_DIR/bin:$PATH
ENV LD_LIBRARY_PATH=$NETCDF_DIR/lib:$LD_LIBRARY_PATH

## A few ENVs for ELM building/running. Note various useages for machine/compiler settings

ENV CC_ROOT=/opt/nvidia/hpc_sdk/Linux_x86_64/23.5/compilers/
ENV FC_ROOT=/opt/nvidia/hpc_sdk/Linux_x86_64/23.5/compilers/
# the following is where include & lib under. Although bin is under, the newest bin in in openmpi4/bin/
ENV MPI_ROOT=/opt/nvidia/hpc_sdk/Linux_x86_64/23.5/comm_libs/mpi
ENV MPINAME=openmpi
ENV MPI_VERSION=4.1.5rc2

# blas/lapack are required by ELM.
# the following is from nv package. IF NOT works, using those from ubuntu (` apt update && apt install -y libblas liblapack`)
ENV BLASLAPACK_DIR=/opt/nvidia/hpc_sdk/Linux_x86_64/23.5/compilers/lib
# ENV BLASLAPACK_DIR=/opt/nvidia/hpc_sdk/Linux_x86_64/23.5/math_libs/lib64  # cublas, but not yet tested
ENV ZLIB_DIR=/usr/local/zlib
ENV HDF5_PATH=/usr/local/hdf5
ENV NETCDF_PATH=/usr/local/netcdf
ENV NETCDF_C_PATH=/usr/local/netcdf
ENV NETCDF_FORTRAN_PATH=/usr/local/netcdf

### EOF
